/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&sk {
    quick-release;
};

/ {
    macros {
        fnArrow: fnArrow {
            label = "ZM_fnArrow";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_EQUAL &kp GREATER_THAN>;
        };
    };
};

/ {
    behaviors {
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(C)>, <&kp LC(X)>;
        };
    };
	keymap {
		compatible = "zmk,keymap";
		layer_0 {
			bindings = <
                &none   &kp Q           &kp W           &kp F           &kp P           &kp B                                                       &kp J           &kp L           &kp U           &kp Y           &kp APOS        &none
                &none   &kp A           &kp R           &kp S           &kp T           &kp G                                                       &kp M           &kp N           &kp E           &kp I           &kp O           &none
                &none   &kp Z           &kp X           &kp C           &kp D           &kp V           &none   &none       &none   &none           &kp K           &kp H           &kp COMMA       &kp DOT         &kp FSLH        &none
                                                        &none           &none           &kp SPACE       &mo 1   &none       &none   &mo 2           &kp BSPC        &none
			>;
		};   
        layer_1 {
			bindings = <
                &trans  &sk LGUI        &sk LALT        &kp LC(F)       &kp BSPC        &kp DEL                                                     &kp CARET       &kp C_PP        &kp C_NEXT      &kp TILDE       &kp GRAVE       &trans
                &trans  &kp ESC         &kp ENTER       &sk LCTRL       &sk LSHFT       &caps_word                                                  &kp PRCNT       &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT       &trans
                &trans  &kp LC(Z)       &td1            &kp LC(V)       &kp TAB         &kp INS     &trans      &trans      &trans      &trans      &kp DLLR        &kp HOME        &kp PG_DN       &kp PG_UP       &kp END         &trans
                                                        &trans          &trans          &trans      &none       &trans      &trans      &mo 3       &kp DEL         &trans      
            >;
		};
        layer_2 {
			bindings = <
                &trans  &kp UNDER       &kp COLON       &kp AMPS        &kp PIPE        &fnArrow                                                    &kp PLUS        &kp N7          &kp N8          &kp N9          &kp ASTRK       &trans
                &trans  &kp SEMI        &kp EXCL        &kp LBRC        &kp LPAR        &kp LBKT                                                    &kp MINUS       &kp N4          &kp N5          &kp N6          &kp EQUAL       &trans
                &trans  &kp HASH        &kp AT          &kp RBRC        &kp RPAR        &kp RBKT    &trans      &trans      &trans      &trans      &kp N0          &kp N1          &kp N2          &kp N3          &kp BSLH        &trans
    	                                                &trans          &trans          &trans      &mo 3       &trans      &trans      &none       &trans          &trans          &trans 
            >;
		};   
        layer_3 {
			bindings = <
                &trans  &bootloader     &trans          &kp CAPS        &kp PSCRN       &trans                                                      &kp F12          &kp F7         &kp F8          &kp F9          &kp LC(PLUS)    &trans
                &trans  &sk LGUI        &sk LALT        &sk LCTRL       &sk LSHFT       &sk LG(LS(LA(LCTRL)))                                       &kp F11          &kp F4         &kp F5          &kp F6          &kp LC(MINUS)   &trans
                &trans  &trans          &trans          &trans          &kp K_APP       &trans      &trans      &trans      &trans      &trans      &kp F10          &kp F1         &kp F2          &kp F3          &kp LC(N0)      &trans
                                                        &trans          &trans          &trans      &trans      &trans      &trans      &trans      &trans          &trans          &trans
            >;
		};  
	};
};

//	            &trans  &trans          &trans          &trans          &trans          &trans                                                      &trans          &trans          &trans          &trans          &trans          &trans
//	            &trans  &trans          &trans          &trans          &trans          &trans                                                      &trans          &trans          &trans          &trans          &trans          &trans
//	            &trans  &trans          &trans          &trans          &trans          &trans      &trans      &trans      &trans      &trans      &trans          &trans          &trans          &trans          &trans          &trans
//	                                                    &trans          &trans          &trans      &trans      &trans      &trans      &trans      &trans          &trans          &trans