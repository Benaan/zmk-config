/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&sk {
    quick-release;
};

/ {
    macros {
        fnArrow: fnArrow {
            label = "ZM_fnArrow";
            compatible = "zmk,behavior-macro";
            tap-ms = <20>;
            #binding-cells = <0>;
            bindings = <&kp KP_EQUAL &kp GREATER_THAN>;
        };
    };
};

/ {
	keymap {
		compatible = "zmk,keymap";
		layer_0 {
			bindings = <
                &none   &kp Q           &kp W           &kp F           &kp P           &kp B                                                       &kp J           &kp L           &kp U           &kp Y           &kp APOS        &none
                &none   &kp A           &kp R           &kp S           &kp T           &kp G                                                       &kp M           &kp N           &kp E           &kp I           &kp O           &none
                &none   &kp Z           &kp X           &kp C           &kp D           &kp V       &kp LCTRL   &none       &none       &kp LGUI    &kp K           &kp H           &kp COMMA       &kp DOT         &kp QMARK       &none
                                                        &none           &none           &kp SPACE   &mo 1       &none       &none       &mo 2       &kp BSPC        &none           &none
			>;
		};   
        layer_1 {
			bindings = <
                &trans  &kp N1          &kp N2          &kp N3          &kp N4          &kp N5                                                      &kp N6          &kp N7          &kp N8          &kp N9          &kp N0          &trans
                &trans  &sk LGUI        &sk LALT        &sk LCTRL       &sk LSHFT       &kp DEL                                                     &kp C_NEXT      &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT       &trans
                &trans  &kp ESC         &kp INS         &kp TAB         &kp ENTER       &key_repeat &trans      &trans      &trans      &trans      &kp C_PP        &kp HOME        &kp PG_DN       &kp PG_UP       &kp END         &trans
                                                        &trans          &trans          &none       &trans      &trans      &trans      &mo 3       &trans          &trans          &trans      
            >;
		};
        layer_2 {
			bindings = <
                &trans  &trans          &kp AT          &kp AMPS        &kp PIPE        &fnArrow                                                    &kp GT          &kp TILDE       &kp PRCNT       &kp DLLR        &kp GRAVE       &trans
                &trans  &kp SEMI        &kp EXCL        &kp LBRC        &kp LPAR        &kp LBKT                                                    &kp ASTRK       &kp EQUAL       &kp MINUS       &kp COLON       &kp FSLH        &trans
                &trans  &caps_word      &kp HASH        &kp RBRC        &kp RPAR        &kp RBKT    &trans      &trans      &trans      &trans      &kp LT          &kp UNDER       &kp PLUS        &kp CARET       &kp BSLH        &trans
    	                                                &trans          &trans          &trans      &mo 3       &trans      &trans      &trans      &none           &trans          &trans 
            >;
		};   
        layer_3 {
			bindings = <
                &trans  &bootloader     &trans          &kp CAPS        &kp PSCRN       &trans                                                      &kp F12          &kp F7         &kp F8          &kp F9          &kp LC(PLUS)    &trans
                &trans  &sk LGUI        &sk LALT        &sk LCTRL       &sk LSHFT       &sk LG(LS(LA(LCTRL)))                                       &kp F11          &kp F4         &kp F5          &kp F6          &kp LC(MINUS)   &trans
                &trans  &trans          &trans          &trans          &kp K_APP       &trans      &trans      &trans      &trans      &trans      &kp F10          &kp F1         &kp F2          &kp F3          &kp LC(N0)      &trans
                                                        &trans          &trans          &none       &trans      &trans      &trans      &trans      &none            &trans         &trans
            >;
		};
	};
};

//	            &trans  &trans          &trans          &trans          &trans          &trans                                                      &trans          &trans          &trans          &trans          &trans          &trans
//	            &trans  &trans          &trans          &trans          &trans          &trans                                                      &trans          &trans          &trans          &trans          &trans          &trans
//	            &trans  &trans          &trans          &trans          &trans          &trans      &trans      &trans      &trans      &trans      &trans          &trans          &trans          &trans          &trans          &trans
//	                                                    &trans          &trans          &trans      &trans      &trans      &trans      &trans      &trans          &trans          &trans
